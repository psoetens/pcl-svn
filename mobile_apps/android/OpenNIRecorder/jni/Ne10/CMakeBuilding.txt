/*
 *  Copyright 2011-12 ARM Limited
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * NE10 Library : CMakeBuilding.txt
 */

=========================BUILDING METHOD=================================

NE10 uses CMake to describe the build in a platform independent manner.

First download and install cmake from cmake.org.
In Ubuntu, you can install cmake by "sudo apt-get install cmake"

---------------------------NATIVE-COMPILING------------------------------
For Unix platforms, say the following on a terminal: (Replace $NE10PATH with the directory where this file is located.)
    cd $NE10PATH
    mkdir build && cd build
    cmake ..
    make
Then the libNE10.a is placed in ./source/ and a test program "NE10_test_static" is placed in ./test/. you can run it.
You might want to add -DNE10_BUILD_SHARED=ON to the cmake call to generate the dynamic library and test program "NE10_test_dynamic".

---------------------------CROSS-COMPILING------------------------------
For cross-compiling, the process is in the following:
    cd $NE10PATH

Open the config.cmake and change the compiler toolchain to yourself.My toolchain is Linaro GCC 4.6.
In Ubuntu 11.10 you can install it by "sudo apt-get install gcc-arm-linux-gnueabi".
    set( CMAKE_C_COMPILER arm-linux-gnueabi-gcc )
    set( CMAKE_CXX_COMPILER arm-linux-gnueabi-g++ )
    set( CMAKE_ASM_COMPILER arm-linux-gnueabi-as )

Now you can run cmake to process and generate makefile.
    mkdir build && cd build
    cmake -DCMAKE_TOOLCHAIN_FILE=../config.cmake ..
    make

Then the libNE10.a is placed in ./source/ and a test program "NE10_test_static" is placed in ./test/. you can copy these to the target and run it.
You might want to add -DNE10_BUILD_SHARED=ON to the cmake call to generate the dynamic library and test program "NE10_test_dynamic".

Note:
When you run NE10_test_dynamic on the target, you might meet the error:
    "NE10_test_dynamic: error while loading shared libraries: libNE10_shared.so.10: cannot open shared object file: No such file or directory"
You can run the following command:
    export LD_LIBRARY_PATH=$NE10PATH/build/source

--------------------------------END--------------------------------------
